package com.temenos.sgntech;

import java.io.BufferedReader;
import java.io.DataOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.sql.Timestamp;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.Map;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;

import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParser;
import com.temenos.sgntech.HashGenerator;
import com.temenos.sgntech.TransUconnector;

/**
 * TODO: Document me!
 *
 * @author Peter
 *
 */
public class EntryPointlevel {

    /**
     * @param args
     * @throws IOException
     */
    public static void main(String[] args) throws IOException {
        // TODO Auto-generated method stub
        EntryPointlevel Innercalls = new EntryPointlevel();
        TransUconnector transucaller = new TransUconnector();

        String mytimestamp;

        final SimpleDateFormat sdf2 = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm:ss.SSSXXX");
        Timestamp timestamp = new Timestamp(System.currentTimeMillis());
        String[] tempm = sdf2.format(timestamp).toString().toString().split("\\+");
        mytimestamp = (tempm[0] + "Z");

        String usern = "Cooperativa_Ahorro_y_Credito_TestSite";
        String psswd = "830058098b40451d8ccb366a3c88a372";
        String secret = "ae9361c550484a838ca5b6ef0c578488";

        String url = "https://app.trustev.com/api/v2.0/session";
        String Pkey = "4448edc64c334237b402bc2656953dad";
        String BlackBox = "XYZ";
        String res;
        String Username = "Cooperativa_Ahorro_y_Credito_TestSite";
        String Psswd = "830058098b40451d8ccb366a3c88a372";
        String sessionFlag = "false";
        String ttkey = null;
        String GenTokenID = null;

        // HashGenerator hashgen =new HashGenerator(mytimestamp,usern, psswd,
        // secret);
        // System.out.println(hashgen);

        // URL obj = new URL(url);

        JSONObject jsonObjectReq = new JSONObject();
        Map<String, String> mapp = new HashMap<>();
        mapp.put("ClientIp", "185.107.57.7");
        JSONArray Details = new JSONArray();
        Details.add(mapp);
        jsonObjectReq.put("Details", Details);
        jsonObjectReq.put("BlackBox", BlackBox);
        String xml = jsonObjectReq.toString();

        // String transuconnector = Innercalls.TransUconnector(Pkey, xml, url);
        String transuconnector = transucaller.TransUconnector(Pkey, xml, url);
        JsonParser jsonParser = new JsonParser();
        JsonElement jsonTree = jsonParser.parse(transuconnector);
        if (jsonTree.isJsonObject()) {
            JsonObject jsonObject = jsonTree.getAsJsonObject();
            JsonElement SessnId = jsonObject.get("SessionId");
            System.out.println("SessionId ==....: " + SessnId);
            if (SessnId != null) {
                sessionFlag = "true";
            }
        }
        if (sessionFlag.equals("true")) {

            HashGenerator hashgen = new HashGenerator();
            String HashResult = hashgen.HashGenerator(mytimestamp, usern, psswd, secret);
            String[] Tquery = HashResult.toString().split("\\|");
            String Ttsamp = Tquery[0];
            String Husrname = Tquery[1];
            String Hpass = Tquery[2];
            ttkey = Innercalls.PostToken(Username, Ttsamp, Husrname, Hpass);
            String urltk = "https://app.trustev.com/api/v2.0/token";

            String Tokencaller = transucaller.TransUconnector("", ttkey, urltk);
            // String Tokencaller = Innercalls.TransUconnector("", ttkey,
            // urltk);

            JsonElement TokenjsonTree = jsonParser.parse(Tokencaller);
            if (TokenjsonTree.isJsonObject()) {
                JsonObject TokenjsonObject = TokenjsonTree.getAsJsonObject();
                JsonElement Tokenid = TokenjsonObject.get("APIToken");
                System.out.println("APIToken ==....: " + Tokenid);
                GenTokenID = Tokenid.toString();
            }
        }
        System.out.println("Generic token is  ==....: " + GenTokenID);
    }

    public String PostToken(String Usernam, String Ttamp, String HUsername, String HPsswd) {
        // creating simple request, creating token request
        Map<Object, Object> tokenreqMap = new HashMap<Object, Object>();
        JSONObject tokenreq_jsonObj;
        tokenreqMap.put("UserName", Usernam);
        tokenreqMap.put("Timestamp", Ttamp);
        tokenreqMap.put("PasswordHash", HPsswd);
        tokenreqMap.put("UserNameHash", HUsername);
        tokenreq_jsonObj = new JSONObject(tokenreqMap);
        System.out.println(tokenreq_jsonObj);
        String tokenkey = tokenreq_jsonObj.toString();
        return tokenkey;
    }
}
